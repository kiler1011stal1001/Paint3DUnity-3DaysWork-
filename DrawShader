Shader "Custom/DrawShader"
{
    Properties
    {
        _MainTex ("Base (RGB)", 2D) = "white" {}
        _Coordinate ("Coordinate", Vector) = (0,0,0,0)
        _BrushSize ("Brush Size", Float) = 0.01 
        _Color ("Color", Color) = (1,0,0,1)
    }
    SubShader
    {
        Tags {"Queue" = "Overlay" }
        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag

            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };

            sampler2D _MainTex;
            float4 _Coordinate;
            float _BrushSize;
            float4 _Color;

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv;
                return o;
            }

            fixed4 frag (v2f i) : SV_Target
            {
                fixed4 col = tex2D(_MainTex, i.uv);
                float2 coord = i.uv * _ScreenParams.xy;
                float2 brushPos = _Coordinate.xy;

                float dist = distance(coord, brushPos);
                if (dist < _BrushSize * _ScreenParams.x)
                {
                    col = _Color;
                }

                return col;
            }
            ENDCG
        }
    }
}
